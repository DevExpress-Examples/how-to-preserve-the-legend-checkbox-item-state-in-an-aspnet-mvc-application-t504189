@{
    const string key = "uncheckedInLegendList";
    List<int> uncheckedSeriesIndexes = new List<int>();
    bool inUpdate = false;
}

@Html.DevExpress().Chart(settings =>
{
    settings.Name = "Chart";
    settings.Width = 600;
    settings.Height = 500;
    settings.Series.Template(t =>
    {
        t.View = new SideBySideBarSeriesView();
        t.SetDataMembers("Argument", "Value");
        t.LabelsVisibility = DefaultBoolean.True;
    });
    settings.LegendItemChecked = (sender, args) =>
    {
        if (inUpdate)
            return;

        var chart = (DevExpress.Web.Mvc.MVCxChartControl)sender;
        if (Session[key] != null)
            uncheckedSeriesIndexes = (List<int>)Session[key];

        Series series = args.CheckedElement as Series;
        if (series == null)
            return;

        if (args.NewCheckState == true)
        {
            uncheckedSeriesIndexes.Remove(chart.Series.IndexOf(series));
        }
        else
        {
            uncheckedSeriesIndexes.Add(chart.Series.IndexOf(series));
        }
        Session[key] = uncheckedSeriesIndexes;
    };

    settings.BoundDataChanged = (sender, args) =>
    {
        var chart = (DevExpress.Web.Mvc.MVCxChartControl)sender;

        if (Session[key] != null)
        {
            uncheckedSeriesIndexes = (List<int>)Session[key];
            inUpdate = true;
            for (int i = 0; i < chart.Series.Count; i++)
            {
                if (uncheckedSeriesIndexes.Contains(i))
                {
                    chart.Series[i].CheckedInLegend = false;
                }
            }
            inUpdate = false;
        }
    };
    
    settings.CallbackRouteValues = new { Controller = "Home", Action = "ChartPartial" };
    settings.Legend.UseCheckBoxes = true;
    
}).Bind(Model, seriesDataMember: "Series").GetHtml()